{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "final project lums",
      "provenance": [],
      "authorship_tag": "ABX9TyNt/C3eei29SDd3ca7vE11I",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/012345-M/Data-anlyse-python-project/blob/main/final_project_lums.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 402
        },
        "id": "tPiLoNWkB9pm",
        "outputId": "64e75c93-7937-4762-87e7-dfd18c636576"
      },
      "source": [
        "import pandas as pd                    # read csv file\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "players_df = pd.read_csv(\"https://raw.githubusercontent.com/Masadn/PythonCourse/master/dataset/players.csv\")\n",
        "players_df"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>bats</th>\n",
              "      <th>throws</th>\n",
              "      <th>yearid</th>\n",
              "      <th>teamid</th>\n",
              "      <th>lgid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26423</th>\n",
              "      <td>strasst01</td>\n",
              "      <td>1988</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Stephen</td>\n",
              "      <td>Strasburg</td>\n",
              "      <td>235</td>\n",
              "      <td>76</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>2016</td>\n",
              "      <td>WAS</td>\n",
              "      <td>NL</td>\n",
              "      <td>10400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26424</th>\n",
              "      <td>taylomi02</td>\n",
              "      <td>1991</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Michael</td>\n",
              "      <td>Taylor</td>\n",
              "      <td>210</td>\n",
              "      <td>75</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>2016</td>\n",
              "      <td>WAS</td>\n",
              "      <td>NL</td>\n",
              "      <td>524000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26425</th>\n",
              "      <td>treinbl01</td>\n",
              "      <td>1988</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Blake</td>\n",
              "      <td>Treinen</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>2016</td>\n",
              "      <td>WAS</td>\n",
              "      <td>NL</td>\n",
              "      <td>524900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26426</th>\n",
              "      <td>werthja01</td>\n",
              "      <td>1979</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Jayson</td>\n",
              "      <td>Werth</td>\n",
              "      <td>235</td>\n",
              "      <td>77</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>2016</td>\n",
              "      <td>WAS</td>\n",
              "      <td>NL</td>\n",
              "      <td>21733615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26427</th>\n",
              "      <td>zimmery01</td>\n",
              "      <td>1984</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Ryan</td>\n",
              "      <td>Zimmerman</td>\n",
              "      <td>225</td>\n",
              "      <td>75</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>2016</td>\n",
              "      <td>WAS</td>\n",
              "      <td>NL</td>\n",
              "      <td>14000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>26428 rows × 14 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        playerid  birthyear birthcountry  ...  teamid lgid    salary\n",
              "0      barkele01       1955          USA  ...     ATL   NL    870000\n",
              "1      bedrost01       1957          USA  ...     ATL   NL    550000\n",
              "2      benedbr01       1955          USA  ...     ATL   NL    545000\n",
              "3       campri01       1953          USA  ...     ATL   NL    633333\n",
              "4      ceronri01       1954          USA  ...     ATL   NL    625000\n",
              "...          ...        ...          ...  ...     ...  ...       ...\n",
              "26423  strasst01       1988          USA  ...     WAS   NL  10400000\n",
              "26424  taylomi02       1991          USA  ...     WAS   NL    524000\n",
              "26425  treinbl01       1988          USA  ...     WAS   NL    524900\n",
              "26426  werthja01       1979          USA  ...     WAS   NL  21733615\n",
              "26427  zimmery01       1984          USA  ...     WAS   NL  14000000\n",
              "\n",
              "[26428 rows x 14 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ECUDKDLPItb2",
        "outputId": "18373911-924c-46bd-cb70-792e6de11034"
      },
      "source": [
        "\n",
        "players_df.shape"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(26428, 14)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "i8PI2PLZJK4L",
        "outputId": "cd9c7325-d570-4d61-8a6e-7dadce6695c7"
      },
      "source": [
        "players_df.head()                             # see the first colums and rows to see the data"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>bats</th>\n",
              "      <th>throws</th>\n",
              "      <th>yearid</th>\n",
              "      <th>teamid</th>\n",
              "      <th>lgid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>NL</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    playerid  birthyear birthcountry  deathyear  ... yearid teamid  lgid  salary\n",
              "0  barkele01       1955          USA        NaN  ...   1985    ATL    NL  870000\n",
              "1  bedrost01       1957          USA        NaN  ...   1985    ATL    NL  550000\n",
              "2  benedbr01       1955          USA        NaN  ...   1985    ATL    NL  545000\n",
              "3   campri01       1953          USA     2013.0  ...   1985    ATL    NL  633333\n",
              "4  ceronri01       1954          USA        NaN  ...   1985    ATL    NL  625000\n",
              "\n",
              "[5 rows x 14 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "u6k6g5ViJhR0",
        "outputId": "a3d4a4b0-fe96-4e91-d2c4-204177febcc6"
      },
      "source": [
        "del players_df['lgid']\n",
        "players_df.head()                                # delete irralavent colums and rows"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>bats</th>\n",
              "      <th>throws</th>\n",
              "      <th>yearid</th>\n",
              "      <th>teamid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>R</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    playerid  birthyear birthcountry  deathyear  ... throws yearid  teamid  salary\n",
              "0  barkele01       1955          USA        NaN  ...      R   1985     ATL  870000\n",
              "1  bedrost01       1957          USA        NaN  ...      R   1985     ATL  550000\n",
              "2  benedbr01       1955          USA        NaN  ...      R   1985     ATL  545000\n",
              "3   campri01       1953          USA     2013.0  ...      R   1985     ATL  633333\n",
              "4  ceronri01       1954          USA        NaN  ...      R   1985     ATL  625000\n",
              "\n",
              "[5 rows x 13 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "csi3y21vK6Ci",
        "outputId": "9e55fe94-dd80-4fa3-943e-09d083c9fba9"
      },
      "source": [
        "del players_df['throws']\n",
        "players_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>bats</th>\n",
              "      <th>yearid</th>\n",
              "      <th>teamid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>ATL</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    playerid  birthyear birthcountry  deathyear  ... bats yearid  teamid  salary\n",
              "0  barkele01       1955          USA        NaN  ...    R   1985     ATL  870000\n",
              "1  bedrost01       1957          USA        NaN  ...    R   1985     ATL  550000\n",
              "2  benedbr01       1955          USA        NaN  ...    R   1985     ATL  545000\n",
              "3   campri01       1953          USA     2013.0  ...    R   1985     ATL  633333\n",
              "4  ceronri01       1954          USA        NaN  ...    R   1985     ATL  625000\n",
              "\n",
              "[5 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "Oz9jis8MZJBt",
        "outputId": "44567c58-7ac4-4a98-e4b1-451b66940a25"
      },
      "source": [
        "del players_df['teamid']\n",
        "players_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>bats</th>\n",
              "      <th>yearid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>R</td>\n",
              "      <td>1985</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    playerid  birthyear birthcountry  deathyear  ... height bats  yearid  salary\n",
              "0  barkele01       1955          USA        NaN  ...     77    R    1985  870000\n",
              "1  bedrost01       1957          USA        NaN  ...     75    R    1985  550000\n",
              "2  benedbr01       1955          USA        NaN  ...     73    R    1985  545000\n",
              "3   campri01       1953          USA     2013.0  ...     73    R    1985  633333\n",
              "4  ceronri01       1954          USA        NaN  ...     71    R    1985  625000\n",
              "\n",
              "[5 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "MecVtsggZ0Lv",
        "outputId": "4ef17427-2f69-4e3c-df87-0da0ab1789b3"
      },
      "source": [
        "del players_df['bats']\n",
        "players_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>yearid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>1985</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>1985</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>1985</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>1985</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>1985</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    playerid  birthyear birthcountry  deathyear  ... weight height  yearid  salary\n",
              "0  barkele01       1955          USA        NaN  ...    225     77    1985  870000\n",
              "1  bedrost01       1957          USA        NaN  ...    200     75    1985  550000\n",
              "2  benedbr01       1955          USA        NaN  ...    175     73    1985  545000\n",
              "3   campri01       1953          USA     2013.0  ...    195     73    1985  633333\n",
              "4  ceronri01       1954          USA        NaN  ...    192     71    1985  625000\n",
              "\n",
              "[5 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dHzA9SAyLM2a",
        "outputId": "24677c45-c962-41d8-c62c-17ad18487215"
      },
      "source": [
        "players_df.shape                                    # seeing how many rows and colums been deleted"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(26428, 10)"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pRMjh8KLLU0C",
        "outputId": "39223c98-e8d0-4335-b282-33d05c744a02"
      },
      "source": [
        "players_df.info()                                    # seeing data type float, integer and objects"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 26428 entries, 0 to 26427\n",
            "Data columns (total 10 columns):\n",
            " #   Column        Non-Null Count  Dtype  \n",
            "---  ------        --------------  -----  \n",
            " 0   playerid      26428 non-null  object \n",
            " 1   birthyear     26428 non-null  int64  \n",
            " 2   birthcountry  26428 non-null  object \n",
            " 3   deathyear     492 non-null    float64\n",
            " 4   namefirst     26428 non-null  object \n",
            " 5   namelast      26428 non-null  object \n",
            " 6   weight        26428 non-null  int64  \n",
            " 7   height        26428 non-null  int64  \n",
            " 8   yearid        26428 non-null  int64  \n",
            " 9   salary        26428 non-null  int64  \n",
            "dtypes: float64(1), int64(5), object(4)\n",
            "memory usage: 2.0+ MB\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aQ4X8uPzL71Z",
        "outputId": "b6bc548a-747e-435c-fce7-4f093834c9ab"
      },
      "source": [
        "players_df.columns                        # seeig what columns are there "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['playerid', 'birthyear', 'birthcountry', 'deathyear', 'namefirst',\n",
              "       'namelast', 'weight', 'height', 'yearid', 'salary'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MBBZm8DzMuQV",
        "outputId": "e594108e-20ad-48d8-da8b-7525cca9f400"
      },
      "source": [
        "players_df.isnull().sum()              \n",
        " # gives you missing values"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "playerid            0\n",
              "birthyear           0\n",
              "birthcountry        0\n",
              "deathyear       25936\n",
              "namefirst           0\n",
              "namelast            0\n",
              "weight              0\n",
              "height              0\n",
              "yearid              0\n",
              "salary              0\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 402
        },
        "id": "dSj2P4KxNIqh",
        "outputId": "f9e70545-b781-4d9c-d98e-05642002b13d"
      },
      "source": [
        "\n",
        "players_df.fillna(np.mean(players_df))              # filled the null values with average values"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>yearid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>1985</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>1985</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>1985</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.000000</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>1985</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>1985</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26423</th>\n",
              "      <td>strasst01</td>\n",
              "      <td>1988</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Stephen</td>\n",
              "      <td>Strasburg</td>\n",
              "      <td>235</td>\n",
              "      <td>76</td>\n",
              "      <td>2016</td>\n",
              "      <td>10400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26424</th>\n",
              "      <td>taylomi02</td>\n",
              "      <td>1991</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Michael</td>\n",
              "      <td>Taylor</td>\n",
              "      <td>210</td>\n",
              "      <td>75</td>\n",
              "      <td>2016</td>\n",
              "      <td>524000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26425</th>\n",
              "      <td>treinbl01</td>\n",
              "      <td>1988</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Blake</td>\n",
              "      <td>Treinen</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>2016</td>\n",
              "      <td>524900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26426</th>\n",
              "      <td>werthja01</td>\n",
              "      <td>1979</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Jayson</td>\n",
              "      <td>Werth</td>\n",
              "      <td>235</td>\n",
              "      <td>77</td>\n",
              "      <td>2016</td>\n",
              "      <td>21733615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26427</th>\n",
              "      <td>zimmery01</td>\n",
              "      <td>1984</td>\n",
              "      <td>USA</td>\n",
              "      <td>2008.833333</td>\n",
              "      <td>Ryan</td>\n",
              "      <td>Zimmerman</td>\n",
              "      <td>225</td>\n",
              "      <td>75</td>\n",
              "      <td>2016</td>\n",
              "      <td>14000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>26428 rows × 10 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "        playerid  birthyear birthcountry  ...  height yearid    salary\n",
              "0      barkele01       1955          USA  ...      77   1985    870000\n",
              "1      bedrost01       1957          USA  ...      75   1985    550000\n",
              "2      benedbr01       1955          USA  ...      73   1985    545000\n",
              "3       campri01       1953          USA  ...      73   1985    633333\n",
              "4      ceronri01       1954          USA  ...      71   1985    625000\n",
              "...          ...        ...          ...  ...     ...    ...       ...\n",
              "26423  strasst01       1988          USA  ...      76   2016  10400000\n",
              "26424  taylomi02       1991          USA  ...      75   2016    524000\n",
              "26425  treinbl01       1988          USA  ...      77   2016    524900\n",
              "26426  werthja01       1979          USA  ...      77   2016  21733615\n",
              "26427  zimmery01       1984          USA  ...      75   2016  14000000\n",
              "\n",
              "[26428 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-_TqPj0uQlHv",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b9a69961-05bf-46d3-ef5d-f65cb1fbfd1a"
      },
      "source": [
        "\n",
        "# take the array of the whole\n",
        "np_players = np.array(players_df)\n",
        "print(np_players)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[['barkele01' 1955 'USA' ... 77 1985 870000]\n",
            " ['bedrost01' 1957 'USA' ... 75 1985 550000]\n",
            " ['benedbr01' 1955 'USA' ... 73 1985 545000]\n",
            " ...\n",
            " ['treinbl01' 1988 'USA' ... 77 2016 524900]\n",
            " ['werthja01' 1979 'USA' ... 77 2016 21733615]\n",
            " ['zimmery01' 1984 'USA' ... 75 2016 14000000]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 402
        },
        "id": "2liZkPCY7YgN",
        "outputId": "3f2687e1-e686-413f-a3ab-3136d21e62d5"
      },
      "source": [
        "\n",
        "players_df.loc[:,['salary']]\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26423</th>\n",
              "      <td>10400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26424</th>\n",
              "      <td>524000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26425</th>\n",
              "      <td>524900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26426</th>\n",
              "      <td>21733615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26427</th>\n",
              "      <td>14000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>26428 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "         salary\n",
              "0        870000\n",
              "1        550000\n",
              "2        545000\n",
              "3        633333\n",
              "4        625000\n",
              "...         ...\n",
              "26423  10400000\n",
              "26424    524000\n",
              "26425    524900\n",
              "26426  21733615\n",
              "26427  14000000\n",
              "\n",
              "[26428 rows x 1 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "99nyUgcaBHzD",
        "outputId": "1466e447-2079-4e75-c2b4-814c0e1b19f5"
      },
      "source": [
        "average= np_players[:,9]                               # mean and median of teh array np.players salary\n",
        "print (np.mean(average))\n",
        "print(np.median(average))\n",
        "print(np.std(average))\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "2085634.053125473\n",
            "550000.0\n",
            "3455282.787739806\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ry6w15HdbpYw",
        "outputId": "250dcfd6-4298-4d27-f9e4-e6ac64e574a2"
      },
      "source": [
        "Standerd_dev= np_players[:,9]\n",
        "print (np.std(Standerd_dev))        # variance and standerd deviation of salary\n",
        "print (np.var(Standerd_dev))"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "3455282.787739806\n",
            "11938979143250.965\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 225
        },
        "id": "LGnlZmq7dpZ9",
        "outputId": "d4af658e-88e9-4ec5-bb3c-0e03788d1f62"
      },
      "source": [
        "players_df.cov()               # coveriance of all the numeric values"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>birthyear</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>yearid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>birthyear</th>\n",
              "      <td>9.369729e+01</td>\n",
              "      <td>1.331704e+01</td>\n",
              "      <td>9.442133e+01</td>\n",
              "      <td>1.562545</td>\n",
              "      <td>7.768253e+01</td>\n",
              "      <td>6.119177e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>deathyear</th>\n",
              "      <td>1.331704e+01</td>\n",
              "      <td>5.167889e+01</td>\n",
              "      <td>2.326273e+01</td>\n",
              "      <td>1.766802</td>\n",
              "      <td>1.312492e+01</td>\n",
              "      <td>2.661467e+06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>weight</th>\n",
              "      <td>9.442133e+01</td>\n",
              "      <td>2.326273e+01</td>\n",
              "      <td>5.121937e+02</td>\n",
              "      <td>27.920923</td>\n",
              "      <td>8.551231e+01</td>\n",
              "      <td>1.524064e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>height</th>\n",
              "      <td>1.562545e+00</td>\n",
              "      <td>1.766802e+00</td>\n",
              "      <td>2.792092e+01</td>\n",
              "      <td>5.219694</td>\n",
              "      <td>1.175819e+00</td>\n",
              "      <td>5.916130e+05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>yearid</th>\n",
              "      <td>7.768253e+01</td>\n",
              "      <td>1.312492e+01</td>\n",
              "      <td>8.551231e+01</td>\n",
              "      <td>1.175819</td>\n",
              "      <td>7.937588e+01</td>\n",
              "      <td>1.082824e+07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>salary</th>\n",
              "      <td>6.119177e+06</td>\n",
              "      <td>2.661467e+06</td>\n",
              "      <td>1.524064e+07</td>\n",
              "      <td>591613.016209</td>\n",
              "      <td>1.082824e+07</td>\n",
              "      <td>1.193943e+13</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "              birthyear     deathyear  ...        yearid        salary\n",
              "birthyear  9.369729e+01  1.331704e+01  ...  7.768253e+01  6.119177e+06\n",
              "deathyear  1.331704e+01  5.167889e+01  ...  1.312492e+01  2.661467e+06\n",
              "weight     9.442133e+01  2.326273e+01  ...  8.551231e+01  1.524064e+07\n",
              "height     1.562545e+00  1.766802e+00  ...  1.175819e+00  5.916130e+05\n",
              "yearid     7.768253e+01  1.312492e+01  ...  7.937588e+01  1.082824e+07\n",
              "salary     6.119177e+06  2.661467e+06  ...  1.082824e+07  1.193943e+13\n",
              "\n",
              "[6 rows x 6 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 225
        },
        "id": "vkO73APnhiIT",
        "outputId": "619e1055-02a9-4e83-c816-6608e1973e24"
      },
      "source": [
        "players_df.corr(method='pearson')                # height and weight are corrilated at 0.53 positive corrilation which is not closer to 0"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>birthyear</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>yearid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>birthyear</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.207061</td>\n",
              "      <td>0.431012</td>\n",
              "      <td>0.070656</td>\n",
              "      <td>0.900773</td>\n",
              "      <td>0.182952</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>deathyear</th>\n",
              "      <td>0.207061</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.180285</td>\n",
              "      <td>0.112977</td>\n",
              "      <td>0.261323</td>\n",
              "      <td>0.151102</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>weight</th>\n",
              "      <td>0.431012</td>\n",
              "      <td>0.180285</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.539996</td>\n",
              "      <td>0.424099</td>\n",
              "      <td>0.194892</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>height</th>\n",
              "      <td>0.070656</td>\n",
              "      <td>0.112977</td>\n",
              "      <td>0.539996</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.057766</td>\n",
              "      <td>0.074942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>yearid</th>\n",
              "      <td>0.900773</td>\n",
              "      <td>0.261323</td>\n",
              "      <td>0.424099</td>\n",
              "      <td>0.057766</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.351740</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>salary</th>\n",
              "      <td>0.182952</td>\n",
              "      <td>0.151102</td>\n",
              "      <td>0.194892</td>\n",
              "      <td>0.074942</td>\n",
              "      <td>0.351740</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "           birthyear  deathyear    weight    height    yearid    salary\n",
              "birthyear   1.000000   0.207061  0.431012  0.070656  0.900773  0.182952\n",
              "deathyear   0.207061   1.000000  0.180285  0.112977  0.261323  0.151102\n",
              "weight      0.431012   0.180285  1.000000  0.539996  0.424099  0.194892\n",
              "height      0.070656   0.112977  0.539996  1.000000  0.057766  0.074942\n",
              "yearid      0.900773   0.261323  0.424099  0.057766  1.000000  0.351740\n",
              "salary      0.182952   0.151102  0.194892  0.074942  0.351740  1.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "w6XaJRrbcszD",
        "outputId": "7b95949e-78e3-41d2-b1c5-0fb8b27f9dbc"
      },
      "source": [
        "players_df.head()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>yearid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>barkele01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Len</td>\n",
              "      <td>Barker</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>1985</td>\n",
              "      <td>870000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bedrost01</td>\n",
              "      <td>1957</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Steve</td>\n",
              "      <td>Bedrosian</td>\n",
              "      <td>200</td>\n",
              "      <td>75</td>\n",
              "      <td>1985</td>\n",
              "      <td>550000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>benedbr01</td>\n",
              "      <td>1955</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Bruce</td>\n",
              "      <td>Benedict</td>\n",
              "      <td>175</td>\n",
              "      <td>73</td>\n",
              "      <td>1985</td>\n",
              "      <td>545000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>campri01</td>\n",
              "      <td>1953</td>\n",
              "      <td>USA</td>\n",
              "      <td>2013.0</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Camp</td>\n",
              "      <td>195</td>\n",
              "      <td>73</td>\n",
              "      <td>1985</td>\n",
              "      <td>633333</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ceronri01</td>\n",
              "      <td>1954</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Rick</td>\n",
              "      <td>Cerone</td>\n",
              "      <td>192</td>\n",
              "      <td>71</td>\n",
              "      <td>1985</td>\n",
              "      <td>625000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    playerid  birthyear birthcountry  deathyear  ... weight height  yearid  salary\n",
              "0  barkele01       1955          USA        NaN  ...    225     77    1985  870000\n",
              "1  bedrost01       1957          USA        NaN  ...    200     75    1985  550000\n",
              "2  benedbr01       1955          USA        NaN  ...    175     73    1985  545000\n",
              "3   campri01       1953          USA     2013.0  ...    195     73    1985  633333\n",
              "4  ceronri01       1954          USA        NaN  ...    192     71    1985  625000\n",
              "\n",
              "[5 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c0Kh-0x2WHZl",
        "outputId": "20aa0e44-bf35-429d-c542-dcb4aba6e22d"
      },
      "source": [
        "type (True)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "bool"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 32
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 195
        },
        "id": "4OTL3siCWf0A",
        "outputId": "ae57270b-596a-43d9-9159-2b69a77412bd"
      },
      "source": [
        "players_df.tail()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>playerid</th>\n",
              "      <th>birthyear</th>\n",
              "      <th>birthcountry</th>\n",
              "      <th>deathyear</th>\n",
              "      <th>namefirst</th>\n",
              "      <th>namelast</th>\n",
              "      <th>weight</th>\n",
              "      <th>height</th>\n",
              "      <th>yearid</th>\n",
              "      <th>salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>26423</th>\n",
              "      <td>strasst01</td>\n",
              "      <td>1988</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Stephen</td>\n",
              "      <td>Strasburg</td>\n",
              "      <td>235</td>\n",
              "      <td>76</td>\n",
              "      <td>2016</td>\n",
              "      <td>10400000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26424</th>\n",
              "      <td>taylomi02</td>\n",
              "      <td>1991</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Michael</td>\n",
              "      <td>Taylor</td>\n",
              "      <td>210</td>\n",
              "      <td>75</td>\n",
              "      <td>2016</td>\n",
              "      <td>524000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26425</th>\n",
              "      <td>treinbl01</td>\n",
              "      <td>1988</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Blake</td>\n",
              "      <td>Treinen</td>\n",
              "      <td>225</td>\n",
              "      <td>77</td>\n",
              "      <td>2016</td>\n",
              "      <td>524900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26426</th>\n",
              "      <td>werthja01</td>\n",
              "      <td>1979</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Jayson</td>\n",
              "      <td>Werth</td>\n",
              "      <td>235</td>\n",
              "      <td>77</td>\n",
              "      <td>2016</td>\n",
              "      <td>21733615</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26427</th>\n",
              "      <td>zimmery01</td>\n",
              "      <td>1984</td>\n",
              "      <td>USA</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Ryan</td>\n",
              "      <td>Zimmerman</td>\n",
              "      <td>225</td>\n",
              "      <td>75</td>\n",
              "      <td>2016</td>\n",
              "      <td>14000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "        playerid  birthyear birthcountry  ...  height yearid    salary\n",
              "26423  strasst01       1988          USA  ...      76   2016  10400000\n",
              "26424  taylomi02       1991          USA  ...      75   2016    524000\n",
              "26425  treinbl01       1988          USA  ...      77   2016    524900\n",
              "26426  werthja01       1979          USA  ...      77   2016  21733615\n",
              "26427  zimmery01       1984          USA  ...      75   2016  14000000\n",
              "\n",
              "[5 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 33
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "JrSgkOWqGhAN",
        "outputId": "8dfd876b-9083-4bc5-c1d0-6a459a9d9a47"
      },
      "source": [
        "np_players=np.array(players_df)\n",
        "salary_data=np_players[:,9]\n",
        "height_data = np_players[:,7]\n",
        "\n",
        "plt.scatter(salary_data,height_data, color= \"green\")\n",
        "\n",
        "plt.title('height vs salary')\n",
        "plt.xlabel('salary')\n",
        "plt.ylabel('height')\n",
        "plt.scatter\n",
        "plt.show()\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "mPdlejAagVWx",
        "outputId": "830472a9-73b2-4208-b52f-05f4027ad244"
      },
      "source": [
        "\n",
        "\n",
        "plt.hist('salary',bins=10, color='blue')\n",
        "\n",
        "\n",
        "plt.title(' salary as seen')\n",
        "\n",
        "plt.ylabel('range')\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}
